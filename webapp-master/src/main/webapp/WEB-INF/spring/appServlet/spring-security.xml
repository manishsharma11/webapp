<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- context:property-placeholder location="classpath:db.properties,classpath:import.properties,classpath:swagger.properties"/ -->
	<context:property-placeholder
		location="classpath:db.properties,classpath:import.properties,classpath:sts-config.properties" />

	<mvc:annotation-driven />

	<http pattern="/**/*.css" security="none" />

	<!-- Swagger Configuration Bean -->
	<!-- beans:bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" 
		/ -->

     <aop:aspectj-autoproxy />
     <beans:bean class="com.main.sts.dao.CacheMonitor" />

	<context:annotation-config />
	<mvc:default-servlet-handler />
	
	<!-- Direct static mappings -->
	<mvc:resources mapping="*.html" location="/sts" />

	<!-- <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<beans:property name="order" value="1" /> <beans:property name="mediaTypes"> 
		<beans:map> <beans:entry key="json" value="application/json" /> <beans:entry 
		key="xml" value="application/xml" /> <beans:entry key="rss" value="application/rss+xml" 
		/> </beans:map> </beans:property> </beans:bean> -->

	<!-- context:component-scan base-package="com.main.sts.controllers" / -->

	<context:component-scan base-package="com"></context:component-scan>
	<sec:global-method-security
		pre-post-annotations="enabled" proxy-target-class="true" />
	<!-- <global-method-security pre-post-annotations="enabled" /> -->

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/school_admin/*" access="hasAnyRole('ROLE_ADMIN','ROLE_GUEST','ROLE_CUSTOMER_SUPPORT','ROLE_OPERATOR')" />

<!-- 		<intercept-url pattern="/webapp/*" access="hasAnyRole('ROLE_USER')" />
 -->					
		<form-login login-page="/login" authentication-failure-url="/loginfailed"
			authentication-success-handler-ref="myAuthenticationSuccessHandler" />

		<logout invalidate-session="true" logout-success-url="/logout" />
		<access-denied-handler error-page="/404" />

		<session-management invalid-session-url="/logout.html">

		</session-management>
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
	</authentication-manager>

    <beans:bean name="sessionCheckSecurityFilter" class="com.main.sts.controllers.webapp.filter.SessionCheckSecurityFilter"/>

	<beans:bean id="customAuthenticationProvider"
		class="com.main.sts.util.CustomAuthenticationProvider">
		<beans:property name="loginService" ref="loginService" />
		<!-- <beans:property name="usersAndRolesDAOImpl" ref="usersAndRolesDAOImpl"/> -->
	</beans:bean>

	<!-- <beans:bean id="usersAndRolesDAOImpl" class="com.main.sts.dao.UsersAndRolesDAOImpl"/> -->

	<beans:bean id="myAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<!-- After login, return to the last visited page -->
		<beans:property name="defaultTargetUrl" value="/admin/home" />
		<beans:property name="useReferer" value="true" />
	</beans:bean>
	
<!-- 	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean> -->
	
	<beans:bean id="postgresDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<!--  <beans:bean id="mysqlDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.mysql.driverClassName}" />
		<beans:property name="url" value="${jdbc.mysql.url}" />
		<beans:property name="username" value="${jdbc.mysql.username}" />
		<beans:property name="password" value="${jdbc.mysql.password}" />
	</beans:bean>-->

<!-- 	<beans:bean id="dataSource"
		class="org.apache.tomcat.jdbc.pool.DataSourceFactory" destroy-method="close">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"></beans:property>
		<beans:property name="url" value="${jdbc.url}"></beans:property>
		<beans:property name="username" value="${jdbc.username}"></beans:property>
		<beans:property name="password" value="${jdbc.password}"></beans:property>
		<beans:property name="minPoolSize" value="4"></beans:property>
		<beans:property name="maxActive" value="8"></beans:property>
		<beans:property name="acquireIncrement" value="1"></beans:property>
		<beans:property name="initialSize" value="4"></beans:property>
		<beans:property name="maxIdle" value="5" />
		<beans:property name="defaultAutoCommit" value="true"></beans:property>
		<beans:property name="maxIdleTimeExcessConnections" value="3"></beans:property> 
			<beans:property name="idleConnectionTestPeriod" value="3"></beans:property> 
			<beans:property name="maxStatements" value="100"></beans:property> <beans:property 
			name="testConnectionOnCheckout" value="true"></beans:property> <beans:property 
			name="autoCommitOnClose" value="true" />
	</beans:bean> -->

	<beans:bean id="postgresSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="postgresDataSource" />
		<beans:property name="packagesToScan">
			<beans:list>
				<beans:value>com</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.format_sql">{hibernate.format_sql}</beans:prop>
				<beans:prop key="hibernate.use_sql_comments">{hibernate.use_sql_comments}</beans:prop>
				<beans:prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</beans:prop>
			    <beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</beans:prop>
			    <beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</beans:prop>
			    <beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
                <beans:prop key="hibernate.cache.use_query_cache">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop -->
	
<!-- 		<beans:bean id="mysqlSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="mysqlDataSource" />
		<beans:property name="packagesToScan">
			<beans:list>
				<beans:value>com</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.mysql.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.format_sql">{hibernate.format_sql}</beans:prop>
				beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop
				<beans:prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</beans:prop>
			    <beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</beans:prop>
			    <beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</beans:prop>
			    <beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
                <beans:prop key="hibernate.cache.use_query_cache">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->

	<beans:bean id="importcsv" class="com.main.sts.util.ImportColumns"
		scope="singleton">
		<beans:property name="first_name" value="${first_name}"></beans:property>
		<beans:property name="last_name" value="${last_name}"></beans:property>
		<beans:property name="gr_number" value="${gr_number}"></beans:property>
		<beans:property name="gender" value="${gender}"></beans:property>
		<beans:property name="parent_first_name" value="${parent_first_name}"></beans:property>
		<beans:property name="parent_last_name" value="${parent_last_name}"></beans:property>
		<beans:property name="parent_mobile" value="${parent_mobile}"></beans:property>
		<beans:property name="parent_email" value="${parent_email}"></beans:property>
		<beans:property name="street" value="${street}"></beans:property>
		<beans:property name="city" value="${city}"></beans:property>
		<beans:property name="state" value="${state}"></beans:property>
		<beans:property name="postal" value="${postal}"></beans:property>
		<beans:property name="country" value="${country}"></beans:property>
		<beans:property name="bus_from_home" value="${bus_from_home}"></beans:property>
		<beans:property name="route_from_home" value="${route_from_home}"></beans:property>
		<beans:property name="pickup_time" value="${pickup_time}"></beans:property>
		<beans:property name="stop_from_home" value="${stop_from_home}"></beans:property>
		<beans:property name="bus_from_school" value="${bus_from_school}"></beans:property>
		<beans:property name="route_from_school" value="${route_from_school}"></beans:property>
		<beans:property name="dropoff_time" value="${dropoff_time}"></beans:property>
		<beans:property name="stop_from_school" value="${stop_from_school}"></beans:property>

	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="postgresSessionFactory" />
		<!-- <beans:property name="sessionFactory" ref="mysqlSessionFactory" /> -->
	</beans:bean>

	<beans:bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<beans:bean id="sts-properties" class="com.ec.eventserver.service.SystemProperties"
		scope="singleton">
		<beans:property name="port_number" value="${port_number}" />
		<beans:property name="time_zone" value="${time_zone}" />
		<beans:property name="distance_to_find_stop" value="${distance_to_find_stop}" />
		<beans:property name="distance_to_find_bus_outof_stop"
			value="${distance_to_find_bus_outof_stop}" />
		<beans:property name="eta_send_time" value="${eta_send_time}" />
		<beans:property name="is_crc_required" value="${is_crc_required}" />
		<beans:property name="is_eta_required" value="${is_eta_required}" />
		<beans:property name="message_worker_threads" value="${message_worker_threads}" />
		<beans:property name="message_queue_size" value="${message_queue_size}" />
		<beans:property name="response_todevice" value="response_todevice"></beans:property>
	</beans:bean>

</beans:beans>