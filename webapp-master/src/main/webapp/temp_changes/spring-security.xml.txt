<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- context:property-placeholder location="classpath:db.properties,classpath:import.properties,classpath:swagger.properties"/ -->
<!-- 	<context:property-placeholder
		location="classpath:db.properties,classpath:import.properties" /> -->
	<context:property-placeholder location="classpath:db.properties,classpath:import.properties" />

	<mvc:annotation-driven />

	<http pattern="/**/*.css" security="none" />

	<!-- Swagger Configuration Bean -->
	<!-- beans:bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" 
		/ -->

     <aop:aspectj-autoproxy />
     <beans:bean class="com.main.sts.dao.CacheMonitor" />

	<context:annotation-config />
	<mvc:default-servlet-handler />

	<!-- Direct static mappings -->
	<mvc:resources mapping="*.html" location="/sts" />

	<!-- <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<beans:property name="order" value="1" /> <beans:property name="mediaTypes"> 
		<beans:map> <beans:entry key="json" value="application/json" /> <beans:entry 
		key="xml" value="application/xml" /> <beans:entry key="rss" value="application/rss+xml" 
		/> </beans:map> </beans:property> </beans:bean> -->

	<!-- context:component-scan base-package="com.main.sts.controllers" / -->

	<context:component-scan base-package="com"></context:component-scan>
	
	<sec:global-method-security
		pre-post-annotations="enabled" proxy-target-class="true" />
	<!-- <global-method-security pre-post-annotations="enabled" /> -->

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/school_admin/*"
			access="hasAnyRole('ROLE_ADMIN','ROLE_GUEST','ROLE_CUSTOMER_SUPPORT','ROLE_OPERATOR')" />

		<form-login login-page="/login" authentication-failure-url="/loginfailed"
			authentication-success-handler-ref="myAuthenticationSuccessHandler" />

		<logout invalidate-session="true" logout-success-url="/logout" />
		<access-denied-handler error-page="/404" />

		<session-management invalid-session-url="/logout.html">

		</session-management>
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
	</authentication-manager>


	<beans:bean id="customAuthenticationProvider"
		class="com.main.sts.util.CustomAuthenticationProvider">
		<beans:property name="loginService" ref="loginService" />
		<!-- <beans:property name="usersAndRolesDAOImpl" ref="usersAndRolesDAOImpl"/> -->
	</beans:bean>

	<!-- <beans:bean id="usersAndRolesDAOImpl" class="com.main.sts.dao.UsersAndRolesDAOImpl"/> -->

	<beans:bean id="myAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<!-- After login, return to the last visited page -->
		<beans:property name="defaultTargetUrl" value="/admin/home" />
		<beans:property name="useReferer" value="true" />
	</beans:bean>

</beans:beans>